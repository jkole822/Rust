name: Rust CI for Fibonacci Number Exercise

on:
  push:
    branches: [ main ]
    paths:
      - 'fibonacci_number/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'fibonacci_number/**'
  workflow_dispatch:  # allows you to trigger manually via GitHub UI

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      FIB_GREETING: ${{ secrets.FIB_GREETING }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Format check
        run: cargo fmt -- --check
        working-directory: fibonacci_number

      - name: Lint with Clippy
        run: cargo clippy -- -D warnings
        working-directory: fibonacci_number

      - name: Build
        run: cargo build --verbose
        working-directory: fibonacci_number

      - name: Test
        run: cargo test --verbose
        working-directory: fibonacci_number

      - name: Run Binary
        run: echo "5" | ./target/debug/fibonacci_number
        working-directory: fibonacci_number